/*
 * ext-shapes.js
 *
 * Licensed under the MIT License
 *
 * Copyright(c) 2010 Christian Tzurcanu
 * Copyright(c) 2010 Alexis Deveria
 *
 */

svgEditor.addExtension('shapes', function() {
	var current_d, cur_shape_id;
	var canv = svgEditor.canvas;
	var cur_shape;
	var start_x, start_y;
	var svgroot = canv.getRootElem();
	var lastBBox = {};

	// This populates the category list
	var categories = {
		/*
		lmap: 'LittleMap',
		*/
		basic: 'Basic',
		object: 'Objects',
		symbol: 'Symbols',
		arrow: 'Arrows',
		flowchart: 'Flowchart',
		animal: 'Animals',
		game: 'Cards & Chess',
		dialog_balloon: 'Dialog balloons',
		electronics: 'Electronics',
		math: 'Mathematical',
		music: 'Music',
		misc: 'Miscellaneous',
		raphael_1: 'raphaeljs.com set 1',
		raphael_2: 'raphaeljs.com set 2'
	};

	var library = {
		/*
		lmap: {
			data: {
				"elevator":    "m 189.21875,246.71875 c -8.41222,-0.2688 -15.8429,7.73698 -15.00395,16.10937 -0.005,20.22241 -0.0435,40.46108 0.0474,60.67325 0.87337,7.66568 8.25193,14.0217 16.03467,13.22133 20.22241,0.005 40.46108,0.0435 60.67325,-0.0474 7.66574,-0.87337 14.02159,-8.25193 13.22142,-16.03467 0.007,-20.22237 0.0801,-40.46122 -0.0176,-60.67325 -0.88653,-7.68707 -8.30548,-14.03368 -16.10428,-13.22142 -19.61689,-0.0397 -39.23416,-0.0151 -58.85087,-0.0272 z m 30.125,7 c 3.6403,0.40259 5.36632,4.05109 7.84467,6.3135 6.362,6.9713 12.84,13.84414 19.12922,20.87723 2.6173,3.53332 -0.94937,8.59263 -5.11822,7.80927 -15.23188,-0.0378 -30.46974,0.0757 -45.69786,-0.0569 -4.34867,-0.4916 -5.68759,-6.5326 -2.28016,-9.06827 7.57046,-8.20112 15.08716,-16.45437 22.6912,-24.62292 0.93707,-0.82047 2.18454,-1.2821 3.43115,-1.25192 z m -23.125,41 c 15.57282,0.0377 31.15157,-0.0756 46.72067,0.0568 4.41212,0.47186 5.68345,6.56674 2.24543,9.09962 -7.43661,8.08328 -14.87323,16.16656 -22.30985,24.24984 -2.49764,2.68968 -6.72625,1.49072 -8.55151,-1.31278 -7.40075,-8.09605 -14.90819,-16.10091 -22.24207,-24.25412 -2.29668,-3.18654 0.21318,-7.9287 4.13733,-7.83935 z",
				"info":        "m 308.78125,179.375 c -9.83069,-0.13652 -19.31152,6.18211 -23.03538,15.26887 -3.88788,8.92672 -1.8762,20.01575 4.93866,26.97964 6.55691,7.05674 17.35939,9.63153 26.40456,6.33794 9.37555,-3.18493 16.28818,-12.39492 16.65963,-22.29995 0.62237,-9.62885 -4.95877,-19.2533 -13.58618,-23.55151 -3.50491,-1.80114 -7.44155,-2.74099 -11.38129,-2.73499 z m -0.25,3.96875 c 3.86281,-0.20295 6.50015,4.7527 4.1809,7.84838 -1.99333,3.29792 -7.5395,2.77365 -8.87817,-0.83981 -1.39836,-3.23257 1.12552,-7.1427 4.69727,-7.00857 z m -8.1875,13 c 4.4375,0 8.875,0 13.3125,0 0,8.27083 0,16.54167 0,24.8125 1.33333,0 2.66667,0 4,0 0,1.07292 0,2.14583 0,3.21875 -5.77083,0 -11.54167,0 -17.3125,0 0,-1.07292 0,-2.14583 0,-3.21875 1.32292,0 2.64583,0 3.96875,0 0,-7.20833 0,-14.41667 0,-21.625 -1.32292,0 -2.64583,0 -3.96875,0 0,-1.0625 0,-2.125 0,-3.1875 z",
				"turnstile":   "m 134.5625,112.71875 c -5.75848,-0.18423 -10.62691,5.32613 -10,11 0.009,19.83865 -0.0173,39.67773 0.013,59.51611 0.11763,5.56729 5.50315,10.07415 10.98704,9.48389 13.34124,-0.0337 26.68672,0.0678 40.02527,-0.0514 5.45734,-0.39833 9.59368,-5.79072 8.97473,-11.14856 -0.009,-19.77198 0.0173,-39.5444 -0.013,-59.31611 -0.11763,-5.56729 -5.50315,-10.07415 -10.98704,-9.48389 -13,0 -26,0 -39,0 z m 19.96875,5 c 2.42336,0.2506 3.65984,2.69302 5.40894,4.12769 6.2491,6.2491 12.49821,12.49821 18.74731,18.74731 -1.41667,1.41667 -2.83333,2.83333 -4.25,4.25 -5.625,-5.625 -11.25,-11.25 -16.875,-16.875 0,19.91667 0,39.83333 0,59.75 -2,0 -4,0 -6,0 0,-19.91667 0,-39.83333 0,-59.75 -5.625,5.625 -11.25,11.25 -16.875,16.875 -1.41667,-1.41667 -2.83333,-2.83333 -4.25,-4.25 7.49629,-7.44123 14.88794,-14.99827 22.44987,-22.36684 0.48435,-0.3216 1.0618,-0.50344 1.64388,-0.50816 z m -23.96875,43 c 6.33333,0 12.66667,0 19,0 0,1.33333 0,2.66667 0,4 -6.33333,0 -12.66667,0 -19,0 0,-1.33333 0,-2.66667 0,-4 z m 29,0 c 6.33333,0 12.66667,0 19,0 0,1.33333 0,2.66667 0,4 -6.33333,0 -12.66667,0 -19,0 0,-1.33333 0,-2.66667 0,-4 z",
                "stairs":      "m 202.59375,45.34375 c 0,5.333333 0,10.666667 0,16 18.66667,0 37.33333,0 56,0 0,-5.333333 0,-10.666667 0,-16 -18.66667,0 -37.33333,0 -56,0 z m 5,22 c 0,4 0,8 0,12 15.33333,0 30.66667,0 46,0 0,-4 0,-8 0,-12 -15.33333,0 -30.66667,0 -46,0 z m 5,18 c 0,2.666667 0,5.333333 0,8 12,0 24,0 36,0 0,-2.666667 0,-5.333333 0,-8 -12,0 -24,0 -36,0 z",
                "escalator":   "m 380.46875,36.46875 c -4.69858,0.30373 -7.75147,4.278274 -11.41349,6.748685 -12.92467,10.052522 -25.84934,20.105043 -38.77401,30.157565 3.6875,4.729167 7.375,9.458333 11.0625,14.1875 C 354.5,77.333333 367.65625,67.104167 380.8125,56.875 c 13.15625,10.229167 26.3125,20.458333 39.46875,30.6875 3.6875,-4.729167 7.375,-9.458333 11.0625,-14.1875 -15.25343,-11.828245 -30.43999,-23.746765 -45.7354,-35.518343 -1.5217,-0.966371 -3.33829,-1.456933 -5.1396,-1.387907 z m 0.3125,33.5 c -3.96424,0.162932 -6.3674,3.761835 -9.37641,5.876175 -8.24953,6.874608 -16.49906,13.749217 -24.74859,20.623825 2.77083,3.333333 5.54167,6.66667 8.3125,10 8.61458,-7.177083 17.22917,-14.354167 25.84375,-21.53125 8.61458,7.177083 17.22917,14.354167 25.84375,21.53125 2.77083,-3.33333 5.54167,-6.666667 8.3125,-10 -10.18022,-8.454512 -20.30512,-16.978992 -30.51997,-25.389691 -1.07443,-0.727135 -2.37022,-1.119409 -3.66753,-1.110309 z m 0.0625,26.5 c -2.98267,0.22039 -4.72034,3.106808 -7.03216,4.68359 -5.19762,4.41797 -10.39523,8.83594 -15.59284,13.25391 1.72917,2.04167 3.45833,4.08333 5.1875,6.125 5.80208,-4.92708 11.60417,-9.85417 17.40625,-14.78125 5.80208,4.92708 11.60417,9.85417 17.40625,14.78125 1.72917,-2.04167 3.45833,-4.08333 5.1875,-6.125 -6.90301,-5.79467 -13.67286,-11.76829 -20.6598,-17.450184 -0.5807,-0.317108 -1.24108,-0.486223 -1.9027,-0.487316 z",
                "loudspeaker": "m 107.65625,358.1875 c -7.04576,-0.30889 -9.428748,9.22625 -4.18111,13.24586 9.50476,12.35276 15.98609,28.24495 12.80698,44.0198 -1.96619,11.08283 -8.10476,20.83224 -14.9054,29.57129 -2.888737,4.89839 2.13356,11.53259 7.63073,10.09386 5.00579,-1.43397 7.00873,-6.99884 10.04113,-10.73969 9.96308,-14.84718 14.80803,-33.68613 10.37686,-51.28877 -2.97424,-12.28421 -9.24739,-23.71399 -17.42398,-33.28124 -1.21615,-0.99922 -2.76848,-1.59263 -4.34521,-1.62111 z M 71.4375,365.75 c -3.688065,0.45412 -5.151202,4.37269 -7.518935,6.76496 -3.316605,4.08876 -6.63321,8.17753 -9.949815,12.26629 -6.769156,0.0345 -13.571587,-0.23793 -20.323027,0.16149 -5.217904,0.90031 -8.224147,6.31864 -7.583223,11.30933 0.03182,7.9898 -0.06418,15.98281 0.04896,23.97056 0.391607,5.64173 6.125713,9.26947 11.453061,8.52742 5.353492,0 10.706984,0 16.060476,0 4.996583,5.94315 9.884676,11.98422 14.948972,17.86626 3.183718,3.0145 8.395466,-0.42627 7.488528,-4.51027 0,-23.952 0,-47.90399 0,-71.85599 -0.0053,-2.40571 -2.220187,-4.56058 -4.625,-4.50005 z m 23.1875,6.4375 c -6.657783,-0.1046 -7.774315,8.73806 -2.957757,12.17379 6.965451,9.19079 10.157537,21.69651 6.113456,32.78329 -1.848565,5.91287 -5.491982,10.99507 -8.940708,16.03377 -2.298724,4.58974 3.012613,10.09376 7.681658,7.97102 3.605711,-1.8657 5.224961,-5.9987 7.486781,-9.17952 7.68907,-12.3137 10.06353,-28.19237 4.39257,-41.78843 -2.59629,-6.12403 -5.83079,-12.29409 -10.596279,-16.99178 -0.940583,-0.61744 -2.052923,-0.9785 -3.179721,-1.00214 z m -11.40625,13.53125 c -4.474628,0.23816 -5.395953,6.17655 -2.178875,8.70416 4.704936,6.08414 6.217246,14.90065 2.030887,21.66481 -3.701952,3.16789 -6.754082,12.00255 0.915892,11.81526 4.45368,-1.46213 6.31918,-6.61731 8.384029,-10.47224 4.349172,-9.44981 1.784668,-20.69276 -4.346821,-28.72845 -1.040199,-1.6807 -2.667696,-3.19577 -4.805112,-2.98354 z",
                "entrance":    "m 477.21875,167.46875 c -4.42091,0.45745 -6.12573,5.06393 -8.78014,7.97356 -15.38611,20.03679 -30.84086,40.0234 -46.18404,60.09156 -2.93815,4.25082 0.97816,10.56912 6.07598,9.93488 33.36631,-0.0212 66.7347,0.0423 100.09972,-0.0318 5.16071,-0.26173 7.78266,-7.21781 4.17232,-10.87237 -16.70425,-21.67931 -33.33986,-43.41427 -50.08703,-65.05878 -1.34067,-1.4549 -3.34133,-2.15633 -5.29681,-2.03709 z m 0.5625,17.1875 c 12.26042,15.9375 24.52083,31.875 36.78125,47.8125 -24.52083,0 -49.04167,0 -73.5625,0 12.26042,-15.9375 24.52083,-31.875 36.78125,-47.8125 z",
                "door":        "m 57.59375,51.4375 c -0.9375,2.5 -1.875,5 -2.8125,7.5 13.333333,5 26.666667,10 40,15 0.9375,-2.5 1.875,-5 2.8125,-7.5 -13.333333,-5 -26.666667,-10 -40,-15 z m -43.40625,14.75 c 0,2.666667 0,5.333333 0,8 13.333333,0 26.666667,0 40,0 0,-2.666667 0,-5.333333 0,-8 -13.333333,0 -26.666667,0 -40,0 z"
            },
        */
		basic: {
			data: {
                "entr√©e":       "m 148.56411,46.497481 c -11.72801,1.21354 -16.25064,13.43384 -23.29239,21.15265 C 84.454704,120.8047 43.455592,173.82615 2.7524584,227.06394 c -7.7944672,11.27678 2.5949105,28.03828 16.1186556,26.35573 88.515766,-0.0562 177.037056,0.11222 265.549396,-0.0844 13.69059,-0.69433 20.64622,-19.14776 11.06854,-28.84275 -44.31385,-57.51189 -88.4456,-115.17145 -132.87331,-172.591059 -3.55659,-3.85963 -8.86404,-5.72041 -14.05163,-5.40409 z m 1.49222,45.59583 c 32.52504,42.279779 65.05005,84.559559 97.57509,126.839329 -65.05005,0 -130.10013,0 -195.150174,0 32.525038,-42.27977 65.050044,-84.55955 97.575084,-126.839329 z",
                "porte":        "m 155.83987,110.99606 c -3.21461,8.5723 -6.42922,17.14459 -9.64383,25.71689 45.7189,17.14458 91.4378,34.28917 137.1567,51.43376 3.21461,-8.5723 6.42922,-17.14459 9.64383,-25.71688 -45.71892,-17.14459 -91.4378,-34.28918 -137.1567,-51.43377 z M 7.0034295,161.5726 c 0,9.14378 0,18.28755 0,27.43134 45.7188905,0 91.4378005,0 137.1566905,0 0,-9.14379 0,-18.28756 0,-27.43134 -45.71889,0 -91.4378,0 -137.1566905,0 z",
				"tourniquet":   "M 75.315515,0.65678163 C 53.81578,-0.03105674 35.639115,20.542313 37.979732,41.726143 c 0.03359,74.069157 -0.0646,148.139917 0.04854,222.208077 0.439182,20.78592 20.546445,37.61263 41.020976,35.40885 49.810562,-0.12583 99.636952,0.25315 149.437482,-0.19191 20.37541,-1.4872 35.81877,-21.6201 33.50786,-41.62403 -0.0337,-73.82024 0.0645,-147.64212 -0.0484,-221.461345 -0.43922,-20.785921 -20.54648,-37.6126333 -41.021,-35.40885508 -48.53652,0 -97.07303,0 -145.609557,0 z M 149.87042,19.324678 c 9.0478,0.935638 13.66429,10.054597 20.19469,15.41105 23.33151,23.33151 46.66305,46.663054 69.99456,69.994562 -5.28925,5.28925 -10.57846,10.57845 -15.86771,15.8677 -21.00139,-21.001375 -42.00275,-42.002754 -63.00413,-63.004132 0,74.360452 0,148.720852 0,223.081312 -7.46716,0 -14.93432,0 -22.40148,0 0,-74.36046 0,-148.72086 0,-223.081312 C 117.78496,78.595236 96.783586,99.596615 75.782212,120.59799 70.492966,115.30874 65.203754,110.01954 59.914507,104.73029 87.90249,76.947867 115.49979,48.733069 143.73286,21.221938 c 1.80836,-1.200729 3.96431,-1.879636 6.13756,-1.89726 z M 60.381204,179.86856 c 23.645982,0 47.292006,0 70.937996,0 0,4.97809 0,9.95622 0,14.93431 -23.64599,0 -47.292014,0 -70.937996,0 0,-4.97809 0,-9.95622 0,-14.93431 z m 108.273776,0 c 23.64598,0 47.29201,0 70.93797,0 0,4.97809 0,9.95622 0,14.93431 -23.64596,0 -47.29199,0 -70.93797,0 0,-4.97809 0,-9.95622 0,-14.93431 z",
                "escalier":     "m -0.18276128,21.271915 c 0,28.60623 0,57.21245 0,85.818725 100.12186228,0 200.24366128,0 300.36552128,0 0,-28.606275 0,-57.212495 0,-85.818725 -100.12186,0 -200.243659,0 -300.36552128,0 z M 26.635589,139.27266 c 0,21.45469 0,42.90936 0,64.36404 82.242921,0 164.485901,0 246.728821,0 0,-21.45468 0,-42.90935 0,-64.36404 -82.24292,0 -164.4859,0 -246.728821,0 z m 26.818349,96.54606 c 0,14.30308 0,28.60622 0,42.90936 64.364042,0 128.728082,0 193.092122,0 0,-14.30314 0,-28.60628 0,-42.90936 -64.36404,0 -128.72808,0 -193.092122,0 z",
                "escalator":    "m 148.97941,25.21954 c -13.95,0.90177 -23.01397,12.70213 -33.88643,20.03673 C 76.719886,75.10201 38.346793,104.94774 -0.02630114,134.79348 10.921814,148.83429 21.86993,162.87511 32.818046,176.91589 71.878696,146.54571 110.93934,116.17551 149.99999,85.8053 c 39.06065,30.37021 78.1213,60.74041 117.18195,91.11059 10.94812,-14.04078 21.89623,-28.0816 32.84436,-42.12241 C 254.73915,99.67566 209.65055,64.28981 164.23878,29.34022 c -4.5179,-2.86914 -9.91132,-4.3256 -15.25937,-4.12068 z m 0.9278,99.46085 c -11.76975,0.48374 -18.90468,11.16883 -27.83838,17.44626 -24.492688,20.41059 -48.985381,40.82114 -73.478075,61.23172 8.22654,9.89662 16.45311,19.79322 24.67965,29.68981 25.57652,-21.30861 51.153065,-42.61722 76.729585,-63.92586 25.57652,21.30864 51.15307,42.61725 76.72959,63.92586 8.22654,-9.89659 16.45311,-19.79319 24.67965,-29.68981 -30.22487,-25.10127 -60.2855,-50.41029 -90.61319,-75.38149 -3.18996,-2.15884 -7.03714,-3.32351 -10.88883,-3.29649 z m 0.18556,78.67798 c -8.85548,0.65434 -14.01459,9.22406 -20.87834,13.90549 -15.43163,13.11687 -30.863235,26.23373 -46.294838,39.3506 5.133872,6.06168 10.267714,12.12333 15.401586,18.18501 17.226262,-14.62841 34.452552,-29.25684 51.678812,-43.88525 17.22627,14.62841 34.45256,29.25684 51.67882,43.88525 5.13387,-6.06168 10.26771,-12.12333 15.40159,-18.18501 -20.49491,-17.20426 -40.59446,-34.93982 -61.33855,-51.80924 -1.72408,-0.9415 -3.68474,-1.44358 -5.64908,-1.44685 z",
				"ascenseur":    "M 50.085631,0.01040185 C 22.055915,-0.88524815 -2.7032864,25.790202 0.09211481,53.687202 0.07545471,121.06876 -0.05282822,188.50448 0.25005273,255.85191 3.1601422,281.39414 27.745679,302.57255 53.677952,299.90569 c 67.381548,0.0167 134.817278,0.14495 202.164708,-0.15793 25.54242,-2.91009 46.72027,-27.49563 44.05408,-53.4279 0.0233,-67.38142 0.2669,-134.81774 -0.0586,-202.164708 -2.95398,-25.6135 -27.6741,-46.7605601 -53.65988,-44.05409015 -65.36395,-0.13228 -130.72915,-0.0503 -196.092496,-0.0906 z M 150.46284,23.334572 c 12.12957,1.34144 17.88071,13.49833 26.13863,21.03673 21.19834,23.22854 42.78318,46.129 63.73901,69.563428 8.72091,11.7731 -3.16332,28.63084 -17.05403,26.02067 -50.75298,-0.12595 -101.52589,0.25223 -152.266348,-0.18959 -14.489871,-1.63803 -18.951184,-21.76678 -7.597547,-30.21569 25.224952,-27.326328 50.270775,-54.826358 75.607615,-82.044158 3.12234,-2.73382 7.27894,-4.27199 11.43267,-4.17143 z M 73.409796,159.94754 c 51.889004,0.12562 103.797774,-0.2519 155.674384,0.18926 14.70128,1.57225 18.93738,21.88053 7.48182,30.32015 -24.77896,26.93368 -49.55795,53.86736 -74.33695,80.80104 -8.32219,8.96208 -22.41202,4.96711 -28.49383,-4.37422 -24.65947,-26.97623 -49.674444,-53.64861 -74.111105,-80.8153 -7.652592,-10.61762 0.710321,-26.41861 13.785681,-26.1209 z",
				"info":         "M 149.95018,-0.39052086 C 90.81595,-1.2117209 33.786218,36.796529 11.386202,91.455829 -12.000445,145.15245 0.10034975,211.85593 41.093566,253.7456 80.535135,296.19378 145.51494,311.68184 199.92407,291.87001 256.32051,272.7118 297.90184,217.31124 300.13621,157.72983 303.87993,99.809719 270.30788,41.916069 218.41169,16.061179 197.32872,5.2268391 173.64877,-0.42661086 149.95018,-0.39052086 z M 148.44637,23.482579 c 23.23583,-1.2208 39.10014,28.58876 25.14923,47.21011 -11.99041,19.83787 -45.35211,16.68425 -53.40457,-5.05169 -8.41151,-19.44477 6.7703,-42.96525 28.25534,-42.15842 z M 99.196361,101.68107 c 26.692749,0 53.385499,0 80.078249,0 0,49.75126 0,99.50258 0,149.25384 8.02034,0 16.04074,0 24.06108,0 0,6.4539 0,12.90774 0,19.36164 -34.71309,0 -69.42624,0 -104.139329,0 0,-6.4539 0,-12.90774 0,-19.36164 7.957719,0 15.915369,0 23.873089,0 0,-43.36004 0,-86.72014 0,-130.08018 -7.95772,0 -15.91537,0 -23.873089,0 0,-6.39122 0,-12.78244 0,-19.17366 z",
                "haut-parleur": "m 233.35825,11.03786 c -20.16188,-0.88391 -26.98094,26.40146 -11.9645,37.90382 27.19844,35.34815 45.74515,80.82461 36.64794,125.96528 -5.62637,31.71418 -23.19225,59.6127 -42.6527,84.62001 -8.2663,14.01704 6.10532,33.0012 21.8358,28.88418 14.32436,-4.10339 20.0559,-20.02759 28.73329,-30.73226 28.50994,-42.48609 42.37406,-96.39487 29.694,-146.76588 -8.51097,-35.152 -26.46195,-67.85899 -49.85975,-95.23625 -3.48009,-2.85933 -7.92217,-4.55741 -12.43408,-4.6389 z M 129.71612,32.6784 C 119.16249,33.97789 114.97566,45.19111 108.20023,52.03674 98.70958,63.73697 89.218903,75.43723 79.728254,87.13746 60.357899,87.23616 40.89234,86.45661 21.572691,87.59957 6.6413585,90.17586 -1.9612052,105.68074 -0.12714567,119.9619 c 0.0909976,22.86329 -0.18371213,45.73576 0.14021642,68.59318 1.12058675,16.14415 17.52908425,26.52515 32.77361525,24.40173 15.319331,0 30.638662,0 45.957993,0 14.29804,17.00667 28.285601,34.29356 42.777401,51.12536 9.11037,8.62618 24.02411,-1.21979 21.42884,-12.9064 0,-68.54008 0,-137.08013 0,-205.62021 -0.0143,-6.88408 -6.35317,-13.05037 -13.23471,-12.87716 z m 66.35242,18.42129 c -19.05167,-0.29932 -22.24668,25.00448 -8.46381,34.83603 19.93205,26.29999 29.06641,62.08586 17.49403,93.81134 -5.28979,16.92003 -15.71566,31.46305 -25.58437,45.88159 -6.57796,13.13381 8.62076,28.8839 21.98153,22.80955 10.31795,-5.33881 14.95153,-17.16564 21.42387,-26.26774 22.00274,-35.23639 28.7974,-80.67415 12.56961,-119.58009 -7.42944,-17.52428 -16.68516,-35.18027 -30.3219,-48.62299 -2.69153,-1.76685 -5.87456,-2.80004 -9.09896,-2.86769 z m -32.63967,38.72048 c -12.80442,0.68151 -15.44086,17.67457 -6.23499,24.90748 13.46346,17.41013 17.79103,42.6391 5.81151,61.99514 -10.59335,9.06511 -19.3272,34.34602 2.62087,33.81007 12.74448,-4.18397 18.08272,-18.93582 23.99141,-29.96694 12.44541,-27.04119 5.10694,-59.21356 -12.43869,-82.20817 -2.97659,-4.80942 -7.63378,-9.14489 -13.75011,-8.53758 z",

				'heart': 'm150,73c61,-175 300,0 0,225c-300,-225 -61,-400 0,-225z',
				'frame': 'm0,0l300,0l0,300l-300,0zm35,-265l0,230l230,0l0,-230z',
				'donut': 'm1,150l0,0c0,-82.29042 66.70958,-149 149,-149l0,0c39.51724,0 77.41599,15.69816 105.35889,43.64108c27.94293,27.94293 43.64111,65.84165 43.64111,105.35892l0,0c0,82.29041 -66.70958,149 -149,149l0,0c-82.29041,0 -149,-66.70959 -149,-149zm74.5,0l0,0c0,41.1452 33.35481,74.5 74.5,74.5c41.14522,0 74.5,-33.3548 74.5,-74.5c0,-41.1452 -33.3548,-74.5 -74.5,-74.5l0,0c-41.14519,0 -74.5,33.35481 -74.5,74.5z',
				'triangle': 'm1,280.375l149,-260.75l149,260.75z',
				'right_triangle': 'm1,299l0,-298l298,298z',
				'diamond': 'm1,150l149,-149l149,149l-149,149l-149,-149z',
				'pentagon': 'm1.00035,116.97758l148.99963,-108.4053l148.99998,108.4053l-56.91267,175.4042l-184.1741,0l-56.91284,-175.4042z',
				'hexagon': 'm1,149.99944l63.85715,-127.71428l170.28572,0l63.85713,127.71428l-63.85713,127.71428l-170.28572,0l-63.85715,-127.71428z',
				'septagon1': 'm0.99917,191.06511l29.51249,-127.7108l119.48833,-56.83673l119.48836,56.83673l29.51303,127.7108l-82.69087,102.41679l-132.62103,0l-82.69031,-102.41679z',
				'heptagon': 'm1,88.28171l87.28172,-87.28171l123.43653,0l87.28172,87.28171l0,123.43654l-87.28172,87.28172l-123.43653,0l-87.28172,-87.28172l0,-123.43654z',
				'decagon': 'm1,150.00093l28.45646,-88.40318l74.49956,-54.63682l92.08794,0l74.50002,54.63682l28.45599,88.40318l-28.45599,88.40318l-74.50002,54.63681l-92.08794,0l-74.49956,-54.63681l-28.45646,-88.40318z',
				'dodecagon': 'm1,110.07421l39.92579,-69.14842l69.14842,-39.92579l79.85159,0l69.14842,39.92579l39.92578,69.14842l0,79.85159l-39.92578,69.14842l-69.14842,39.92578l-79.85159,0l-69.14842,-39.92578l-39.92579,-69.14842l0,-79.85159z',
				'star_points_5': 'm1,116.58409l113.82668,0l35.17332,-108.13487l35.17334,108.13487l113.82666,0l-92.08755,66.83026l35.17514,108.13487l-92.08759,-66.83208l-92.08757,66.83208l35.17515,-108.13487l-92.08758,-66.83026z',
				'trapezoid': 'm1,299l55.875,-298l186.25001,0l55.87498,298z',
				'arrow_up': 'm1.49805,149.64304l148.50121,-148.00241l148.50121,148.00241l-74.25061,0l0,148.71457l-148.5012,0l0,-148.71457z',
				'vertical_scrool': 'm37.375,261.625l0,-242.9375l0,0c0,-10.32083 8.36669,-18.6875 18.6875,-18.6875l224.25,0c10.32083,0 18.6875,8.36667 18.6875,18.6875c0,10.32081 -8.36667,18.6875 -18.6875,18.6875l-18.6875,0l0,242.9375c0,10.32083 -8.36668,18.6875 -18.6875,18.6875l-224.25,0l0,0c-10.32083,0 -18.6875,-8.36667 -18.6875,-18.6875c0,-10.32083 8.36667,-18.6875 18.6875,-18.6875zm37.375,-261.625l0,0c10.32081,0 18.6875,8.36667 18.6875,18.6875c0,10.32081 -8.36669,18.6875 -18.6875,18.6875c-5.1604,0 -9.34375,-4.18335 -9.34375,-9.34375c0,-5.16041 4.18335,-9.34375 9.34375,-9.34375l18.6875,0m186.875,18.6875l-205.5625,0m-37.375,224.25l0,0c5.1604,0 9.34375,4.18335 9.34375,9.34375c0,5.1604 -4.18335,9.34375 -9.34375,9.34375l18.6875,0m-18.6875,18.6875l0,0c10.32081,0 18.6875,-8.36667 18.6875,-18.6875l0,-18.6875',
				'smiley': 'm68.49886,214.78838q81.06408,55.67332 161.93891,0m-144.36983,-109.9558c0,-8.60432 6.97517,-15.57949 15.57948,-15.57949c8.60431,0 15.57948,6.97517 15.57948,15.57949c0,8.60431 -6.97517,15.57947 -15.57948,15.57947c-8.60431,0 -15.57948,-6.97516 -15.57948,-15.57947m95.83109,0c0,-8.60432 6.97517,-15.57949 15.57948,-15.57949c8.60431,0 15.57947,6.97517 15.57947,15.57949c0,8.60431 -6.97516,15.57947 -15.57947,15.57947c-8.60429,0 -15.57948,-6.97516 -15.57948,-15.57947m-181.89903,44.73038l0,0c0,-82.60133 66.96162,-149.56296 149.56296,-149.56296c82.60135,0 149.56296,66.96162 149.56296,149.56296c0,82.60135 -66.96161,149.56296 -149.56296,149.56296c-82.60133,0 -149.56296,-66.96161 -149.56296,-149.56296zm0,0l0,0c0,-82.60133 66.96162,-149.56296 149.56296,-149.56296c82.60135,0 149.56296,66.96162 149.56296,149.56296c0,82.60135 -66.96161,149.56296 -149.56296,149.56296c-82.60133,0 -149.56296,-66.96161 -149.56296,-149.56296z',
				'left_braket': 'm174.24565,298.5c-13.39009,0 -24.24489,-1.80908 -24.24489,-4.04065l0,-140.4187c0,-2.23158 -10.85481,-4.04065 -24.2449,-4.04065l0,0c13.39009,0 24.2449,-1.80907 24.2449,-4.04065l0,-140.4187l0,0c0,-2.23159 10.8548,-4.04066 24.24489,-4.04066',
				'uml_actor': 'm40.5,100l219,0m-108.99991,94.00006l107,105m-107.00009,-106.00006l-100,106m99.5,-231l0,125m33.24219,-158.75781c0,18.35916 -14.88303,33.24219 -33.24219,33.24219c-18.35916,0 -33.2422,-14.88303 -33.2422,-33.24219c0.00002,-18.35915 14.88304,-33.24219 33.2422,-33.24219c18.35916,0 33.24219,14.88304 33.24219,33.24219z',
				'dialog_balloon_1': 'm0.99786,35.96579l0,0c0,-19.31077 15.28761,-34.96524 34.14583,-34.96524l15.52084,0l0,0l74.50001,0l139.68748,0c9.05606,0 17.74118,3.68382 24.14478,10.24108c6.40356,6.55726 10.00107,15.45081 10.00107,24.72416l0,87.41311l0,0l0,52.44785l0,0c0,19.31078 -15.2876,34.96524 -34.14584,34.96524l-139.68748,0l-97.32507,88.90848l22.82506,-88.90848l-15.52084,0c-18.85822,0 -34.14583,-15.65446 -34.14583,-34.96524l0,0l0,-52.44785l0,0z',
				'cloud': 'm182.05086,34.31005c-0.64743,0.02048 -1.27309,0.07504 -1.92319,0.13979c-10.40161,1.03605 -19.58215,7.63722 -24.24597,17.4734l-2.47269,7.44367c0.53346,-2.57959 1.35258,-5.08134 2.47269,-7.44367c-8.31731,-8.61741 -19.99149,-12.59487 -31.52664,-10.72866c-11.53516,1.8662 -21.55294,9.3505 -27.02773,20.19925c-15.45544,-9.51897 -34.72095,-8.94245 -49.62526,1.50272c-14.90431,10.44516 -22.84828,28.93916 -20.43393,47.59753l1.57977,7.58346c-0.71388,-2.48442 -1.24701,-5.01186 -1.57977,-7.58346l-0.2404,0.69894c-12.95573,1.4119 -23.58103,11.46413 -26.34088,24.91708c-2.75985,13.45294 2.9789,27.25658 14.21789,34.21291l17.54914,4.26352c-6.1277,0.50439 -12.24542,-0.9808 -17.54914,-4.26352c-8.66903,9.71078 -10.6639,24.08736 -4.94535,35.96027c5.71854,11.87289 17.93128,18.70935 30.53069,17.15887l7.65843,-2.02692c-2.46413,1.0314 -5.02329,1.70264 -7.65843,2.02692c7.15259,13.16728 19.01251,22.77237 32.93468,26.5945c13.92217,3.82214 28.70987,1.56322 41.03957,-6.25546c10.05858,15.86252 27.91113,24.19412 45.81322,21.38742c17.90208,-2.8067 32.66954,-16.26563 37.91438,-34.52742l1.82016,-10.20447c-0.27254,3.46677 -0.86394,6.87508 -1.82016,10.20447c12.31329,8.07489 27.80199,8.52994 40.52443,1.18819c12.72244,-7.34175 20.6609,-21.34155 20.77736,-36.58929l-4.56108,-22.7823l-17.96776,-15.41455c13.89359,8.70317 22.6528,21.96329 22.52884,38.19685c16.5202,0.17313 30.55292,-13.98268 36.84976,-30.22897c6.29684,-16.24631 3.91486,-34.76801 -6.2504,-48.68089c4.21637,-10.35873 3.96622,-22.14172 -0.68683,-32.29084c-4.65308,-10.14912 -13.23602,-17.69244 -23.55914,-20.65356c-2.31018,-13.45141 -11.83276,-24.27162 -24.41768,-27.81765c-12.58492,-3.54603 -25.98557,0.82654 -34.41142,11.25287l-5.11707,8.63186c1.30753,-3.12148 3.01521,-6.03101 5.11707,-8.63186c-5.93959,-8.19432 -15.2556,-12.8181 -24.96718,-12.51096z',
				'cylinder': 'm299.0007,83.77844c0,18.28676 -66.70958,33.11111 -149.00002,33.11111m149.00002,-33.11111l0,0c0,18.28676 -66.70958,33.11111 -149.00002,33.11111c-82.29041,0 -148.99997,-14.82432 -148.99997,-33.11111m0,0l0,0c0,-18.28674 66.70956,-33.1111 148.99997,-33.1111c82.29044,0 149.00002,14.82436 149.00002,33.1111l0,132.44449c0,18.28674 -66.70958,33.11105 -149.00002,33.11105c-82.29041,0 -148.99997,-14.82431 -148.99997,-33.11105z',
				'arrow_u_turn': 'm1.00059,299.00055l0,-167.62497l0,0c0,-72.00411 58.37087,-130.37499 130.375,-130.37499l0,0l0,0c34.57759,0 67.73898,13.7359 92.18906,38.18595c24.45006,24.45005 38.18593,57.61144 38.18593,92.18904l0,18.625l37.24997,0l-74.49995,74.50002l-74.50002,-74.50002l37.25,0l0,-18.625c0,-30.8589 -25.0161,-55.87498 -55.87498,-55.87498l0,0l0,0c-30.85892,0 -55.875,25.01608 -55.875,55.87498l0,167.62497z',
				'arrow_left_up': 'm0.99865,224.5l74.50004,-74.5l0,37.25l111.74991,0l0,-111.75l-37.25,0l74.5,-74.5l74.5,74.5l-37.25,0l0,186.25l-186.24989,0l0,37.25l-74.50005,-74.5z',
				'maximize': 'm1.00037,150.34581l55.30305,-55.30267l0,27.65093l22.17356,0l0,-44.21833l44.21825,0l0,-22.17357l-27.65095,0l55.30267,-55.30292l55.3035,55.30292l-27.65175,0l0,22.17357l44.21835,0l0,44.21833l22.17357,0l0,-27.65093l55.30345,55.30267l-55.30345,55.3035l0,-27.65175l-22.17357,0l0,44.21834l-44.21835,0l0,22.17355l27.65175,0l-55.3035,55.30348l-55.30267,-55.30348l27.65095,0l0,-22.17355l-44.21825,0l0,-44.21834l-22.17356,0l0,27.65175l-55.30305,-55.3035z',
				'cross': 'm0.99844,99.71339l98.71494,0l0,-98.71495l101.26279,0l0,98.71495l98.71495,0l0,101.2628l-98.71495,0l0,98.71494l-101.26279,0l0,-98.71494l-98.71494,0z',
				'plaque': 'm-0.00197,49.94376l0,0c27.5829,0 49.94327,-22.36036 49.94327,-49.94327l199.76709,0l0,0c0,27.5829 22.36037,49.94327 49.94325,49.94327l0,199.7671l0,0c-27.58289,0 -49.94325,22.36034 -49.94325,49.94325l-199.76709,0c0,-27.58292 -22.36037,-49.94325 -49.94327,-49.94325z',
				'page': 'm249.3298,298.99744l9.9335,-39.73413l39.73413,-9.93355l-49.66763,49.66768l-248.33237,0l0,-298.00001l298.00001,0l0,248.33234'

			},
			buttons: []
		}
	};

	var cur_lib = library.basic;
	var mode_id = 'shapelib';

	function loadIcons() {
		$('#shape_buttons').empty().append(cur_lib.buttons);
	}

	function loadLibrary(cat_id) {

		var lib = library[cat_id];

		if (!lib) {
			$('#shape_buttons').html('Loading...');
			$.getJSON('extensions/shapelib/' + cat_id + '.json', function(result) {
				cur_lib = library[cat_id] = {
					data: result.data,
					size: result.size,
					fill: result.fill
				};
				makeButtons(cat_id, result);
				loadIcons();
			});
			return;
		}
		cur_lib = lib;
		if (!lib.buttons.length) makeButtons(cat_id, lib);
		loadIcons();
	}

	function makeButtons(cat, shapes) {
		var size = cur_lib.size || 300;
		var fill = cur_lib.fill || false;
		var off = size * 0.05;
		var vb = [-off, -off, size + off*2, size + off*2].join(' ');
		var stroke = fill ? 0: (size/30);
		var shape_icon = new DOMParser().parseFromString(
			'<svg xmlns="http://www.w3.org/2000/svg"><svg viewBox="' + vb + '"><path fill="'+(fill?'#333':'none')+'" stroke="#000" stroke-width="' + stroke + '" /><\/svg><\/svg>',
			'text/xml');

		var width = 24;
		var height = 24;
		shape_icon.documentElement.setAttribute('width', width);
		shape_icon.documentElement.setAttribute('height', height);
		var svg_elem = $(document.importNode(shape_icon.documentElement,true));

		var data = shapes.data;

		cur_lib.buttons = [];

		for (var id in data) {
			var path_d = data[id];
			var icon = svg_elem.clone();
			icon.find('path').attr('d', path_d);

			var icon_btn = icon.wrap('<div class="tool_button">').parent().attr({
				id: mode_id + '_' + id,
				title: id
			});
			// Store for later use
			cur_lib.buttons.push(icon_btn[0]);
		}
	}

	return {
		svgicons: 'extensions/ext-shapes.xml',
		buttons: [{
			id: 'tool_shapelib',
			type: 'mode_flyout', // _flyout
			position: 6,
			title: 'Shape library',
			events: {
				click: function() {
					canv.setMode(mode_id);
				}
			}
		}],
		callback: function() {
			$('<style>').text('\
			#shape_buttons {\
				overflow: auto;\
				width: 180px;\
				max-height: 300px;\
				display: table-cell;\
				vertical-align: middle;\
			}\
			\
			#shape_cats {\
				min-width: 110px;\
				display: table-cell;\
				vertical-align: middle;\
				height: 300px;\
			}\
			#shape_cats > div {\
				line-height: 1em;\
				padding: .5em;\
				border:1px solid #B0B0B0;\
				background: #E8E8E8;\
				margin-bottom: -1px;\
			}\
			#shape_cats div:hover {\
				background: #FFFFCC;\
			}\
			#shape_cats div.current {\
				font-weight: bold;\
			}').appendTo('head');

			var btn_div = $('<div id="shape_buttons">');
			$('#tools_shapelib > *').wrapAll(btn_div);

			var shower = $('#tools_shapelib_show');

			loadLibrary('basic');

			// Do mouseup on parent element rather than each button
			$('#shape_buttons').mouseup(function(evt) {
				var btn = $(evt.target).closest('div.tool_button');

				if (!btn.length) return;

				var copy = btn.children().clone();
				shower.children(':not(.flyout_arrow_horiz)').remove();
				shower
					.append(copy)
					.attr('data-curopt', '#' + btn[0].id) // This sets the current mode
					.mouseup();
				canv.setMode(mode_id);

				cur_shape_id = btn[0].id.substr((mode_id+'_').length);
				current_d = cur_lib.data[cur_shape_id];

				$('.tools_flyout').fadeOut();
			});

			var shape_cats = $('<div id="shape_cats">');
			var cat_str = '';

			$.each(categories, function(id, label) {
				cat_str += '<div data-cat=' + id + '>' + label + '</div>';
			});

			shape_cats.html(cat_str).children().bind('mouseup', function() {
				var catlink = $(this);
				catlink.siblings().removeClass('current');
				catlink.addClass('current');

				loadLibrary(catlink.attr('data-cat'));
				// Get stuff
				return false;
			});

			shape_cats.children().eq(0).addClass('current');

			$('#tools_shapelib').append(shape_cats);

			shower.mouseup(function() {
				canv.setMode(current_d ? mode_id : 'select');
			});
			$('#tool_shapelib').remove();

			var h = $('#tools_shapelib').height();
			$('#tools_shapelib').css({
				'margin-top': -(h/2 - 15),
				'margin-left': 3
			});
		},
		mouseDown: function(opts) {
			var mode = canv.getMode();
			if (mode !== mode_id) return;

			var x = start_x = opts.start_x;
			var y = start_y = opts.start_y;
			var cur_style = canv.getStyle();

			cur_shape = canv.addSvgElementFromJson({
				'element': 'path',
				'curStyles': true,
				'attr': {
					'd': current_d,
					'id': canv.getNextId(),
					'opacity': cur_style.opacity / 2,
					'style': 'pointer-events:none'
				}
			});

			// Make sure shape uses absolute values
			if (/[a-z]/.test(current_d)) {
				current_d = cur_lib.data[cur_shape_id] = canv.pathActions.convertPath(cur_shape);
				cur_shape.setAttribute('d', current_d);
				canv.pathActions.fixEnd(cur_shape);
			}
			cur_shape.setAttribute('transform', 'translate(' + x + ',' + y + ') scale(0.005) translate(' + -x + ',' + -y + ')');

			canv.recalculateDimensions(cur_shape);

			var tlist = canv.getTransformList(cur_shape);

			lastBBox = cur_shape.getBBox();

			return {
				started: true
			};
		},
		mouseMove: function(opts) {
			var mode = canv.getMode();
			if (mode !== mode_id) return;

			var zoom = canv.getZoom();
			var evt = opts.event;

			var x = opts.mouse_x/zoom;
			var y = opts.mouse_y/zoom;

			var tlist = canv.getTransformList(cur_shape),
				box = cur_shape.getBBox(),
				left = box.x, top = box.y, width = box.width,
				height = box.height;
			var dx = (x-start_x), dy = (y-start_y);

			var newbox = {
				'x': Math.min(start_x,x),
				'y': Math.min(start_y,y),
				'width': Math.abs(x-start_x),
				'height': Math.abs(y-start_y)
			};

			var tx = 0, ty = 0,
				sy = height ? (height+dy)/height : 1,
				sx = width ? (width+dx)/width : 1;

			sx = (newbox.width / lastBBox.width) || 1;
			sy = (newbox.height / lastBBox.height) || 1;

			// Not perfect, but mostly works...
			if (x < start_x) {
				tx = lastBBox.width;
			}
			if (y < start_y) ty = lastBBox.height;

			// update the transform list with translate,scale,translate
			var translateOrigin = svgroot.createSVGTransform(),
				scale = svgroot.createSVGTransform(),
				translateBack = svgroot.createSVGTransform();

			translateOrigin.setTranslate(-(left+tx), -(top+ty));
			if (!evt.shiftKey) {
				var max = Math.min(Math.abs(sx), Math.abs(sy));

				sx = max * (sx < 0 ? -1 : 1);
				sy = max * (sy < 0 ? -1 : 1);
			}
			scale.setScale(sx,sy);

			translateBack.setTranslate(left+tx, top+ty);
			tlist.appendItem(translateBack);
			tlist.appendItem(scale);
			tlist.appendItem(translateOrigin);

			canv.recalculateDimensions(cur_shape);

			lastBBox = cur_shape.getBBox();
		},
		mouseUp: function(opts) {
			var mode = canv.getMode();
			if (mode !== mode_id) return;
			if (opts.mouse_x == start_x && opts.mouse_y == start_y) {
				return {
					keep: false,
					element: cur_shape,
					started: false
				};
			}

			return {
				keep: true,
				element: cur_shape,
				started: false
			};
		}
	};
});
